# Create project directory

mkdir crud-project
cd crud-project

# Create frontend with Vite

npm create vite@latest frontend -- --template react
cd frontend
npm install
npm install axios react-router-dom

# Create backend directory

cd ..
mkdir backend
cd backend
npm init -y
npm install express mysql2 cors dotenv body-parser

######################################################

# In backend directory

npm init -f
npm install express mysql2 cors dotenv body-parser
npx nodemon server.js # Recommended for development

# In frontend directory

npm install
npm install tailwindcss postcss autoprefixer
npx tailwindcss init -p # For Tailwind CSS setup
npm run dev

###################In the Production###################

# In the backend directory

cd backend

# Install production dependencies

npm install

# Install PM2 for process management (recommended for Node.js production)

npm install -g pm2

# Create a production build start script in package.json

# Add this to your package.json scripts:

# "start": "node server.js"

# Start the backend with PM2

pm2 start server.js --name crud-backend

# Optional: Save PM2 process list to restart on server reboot

pm2 save
pm2 startup

# In the frontend directory

cd frontend

# Install dependencies

npm install

# Create production build

npm run build

# Install Nginx

sudo apt-get update
sudo apt-get install nginx

# Create Nginx configuration

sudo nano /etc/nginx/sites-available/react-app

# Paste the following configuration:

```
server {
    listen 80;
    server_name your-domain.com;

    root /path/to/frontend/dist;
    index index.html;

    location / {
        try_files $uri $uri/ /index.html;
    }

    location /api {
        proxy_pass http://localhost:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}
```

# Enable the site

sudo ln -s /etc/nginx/sites-available/react-app /etc/nginx/sites-enabled/
sudo nginx -t
sudo systemctl restart nginx

# Install Certbot for Let's Encrypt

sudo apt-get install certbot python3-certbot-nginx

# Obtain SSL certificate

sudo certbot --nginx -d your-domain.com

# This will automatically modify your Nginx configuration

# Backend security

npm install helmet cors

# Update server.js to include security middleware

const helmet = require('helmet');
app.use(helmet());

# Rate limiting

npm install express-rate-limit
const rateLimit = require('express-rate-limit');
const limiter = rateLimit({
windowMs: 15 _ 60 _ 1000, // 15 minutes
max: 100 // limit each IP to 100 requests per windowMs
});
app.use(limiter);

######################################################

# If using Docker Compose

docker-compose up -d

# Alternative Docker run command

docker run -d \
 --name <container_name> \
 -e MYSQL_ROOT_PASSWORD=<root_password> \
 -e MYSQL_DATABASE=<database_name> \
 -e MYSQL_USER=<user_name> \
 -e MYSQL_PASSWORD=<user_password> \
 -p <host_port>:3306 \
 mysql:latest
